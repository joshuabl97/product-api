basePath: /
consumes:
    - application/json
definitions:
    product:
        description: Product defines the structure for an API product
        properties:
            description:
                description: the description for this poduct
                maxLength: 10000
                type: string
                x-go-name: Description
            id:
                description: the id for the product
                format: int64
                minimum: 1
                type: integer
                x-go-name: ID
            name:
                description: the name for this poduct
                maxLength: 255
                type: string
                x-go-name: Name
            price:
                description: the price for the product
                format: float
                minimum: 0.01
                type: number
                x-go-name: Price
            sku:
                description: the SKU for the product
                pattern: '[a-z]+-[a-z]+-[a-z]+'
                type: string
                x-go-name: SKU
        required:
            - name
            - price
            - sku
        type: object
        x-go-name: Product
        x-go-package: github.com/joshuabl97/product-api/data
host: localhost
info:
    description: |-
        the purpose of this application is to provide an application
        that is using plain go code to define an API
    termsOfService: there are no TOS at this moment, use at your own risk, I take no responsibility
    title: Products API
    version: 0.0.1
paths:
    /products:
        get:
            description: Return a list of products from the database
            operationId: listProducts
            responses:
                "200":
                    $ref: '#/responses/productsResponse'
            tags:
                - products
        post:
            consumes:
                - application/json
            description: Adds a product to the system
            operationId: addProduct
            parameters:
                - description: Below is the format for a product -
                  in: body
                  name: Product
                  required: true
                  schema:
                    $ref: '#/definitions/product'
                    description: Below is the format for a product -
                    type: object
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/noContent'
            tags:
                - products
    /products/{id}:
        delete:
            description: Deletes a product from the data store
            operationId: deleteProduct
            parameters:
                - description: The id of the product to delete from the database
                  format: int64
                  in: path
                  name: ID
                  required: true
                  type: integer
            responses:
                "200":
                    $ref: '#/responses/noContent'
                "400":
                    $ref: '#/responses/noContent'
                "404":
                    $ref: '#/responses/noContent'
            tags:
                - products
        get:
            description: Return a single product from the database
            operationId: listProduct
            parameters:
                - description: The id of the product to delete from the database
                  format: int64
                  in: path
                  name: ID
                  required: true
                  type: integer
            responses:
                "200":
                    $ref: '#/responses/productResponse'
            tags:
                - products
        put:
            description: Updates a product in the system
            operationId: updateProduct
            parameters:
                - description: I
                  in: body
                  name: Product
                  required: true
                  schema:
                    $ref: '#/definitions/product'
                    description: I
                    type: object
                - description: Below is the format for a product -
                  in: path
                  name: product id
                  required: true
                  type: integer
            responses:
                "200":
                    $ref: '#/responses/noContent'
            tags:
                - products
produces:
    - application/json
responses:
    noContent:
        description: ""
    productResponse:
        description: A single product
        schema:
            $ref: '#/definitions/product'
    productsResponse:
        description: A list of products
        schema:
            items:
                $ref: '#/definitions/product'
            type: array
schemes:
    - http
swagger: "2.0"
